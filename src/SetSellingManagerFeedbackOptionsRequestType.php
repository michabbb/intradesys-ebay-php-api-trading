<?php

namespace intradesys\api\ebay\trading;
// autogenerated file 22.07.2011 09:27
// $Id: $
// $Log: $
//
//
require_once 'AutomatedLeaveFeedbackEventCodeType.php';
require_once 'FeedbackCommentArrayType.php';
require_once 'AbstractRequestType.php';

/**
 * Enables Selling Manager subscribers to store standard feedback comments that 
 * canbe left for their buyers. Selling Manager Pro subscribers can also specify 
 * whatevents, if any, will trigger an automated feedback to buyers. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/SetSellingManagerFeedbackOptionsRequestType.html
 *
 */
class SetSellingManagerFeedbackOptionsRequestType extends AbstractRequestType
{
	/**
	 * @var AutomatedLeaveFeedbackEventCodeType
	 */
	protected $AutomatedLeaveFeedbackEvent;
	/**
	 * @var FeedbackCommentArrayType
	 */
	protected $StoredComments;

	/**
	 * @return AutomatedLeaveFeedbackEventCodeType
	 */
	function getAutomatedLeaveFeedbackEvent()
	{
		return $this->AutomatedLeaveFeedbackEvent;
	}
	/**
	 * @return void
	 * @param AutomatedLeaveFeedbackEventCodeType $value 
	 */
	function setAutomatedLeaveFeedbackEvent($value)
	{
		$this->AutomatedLeaveFeedbackEvent = $value;
	}
	/**
	 * @return FeedbackCommentArrayType
	 */
	function getStoredComments()
	{
		return $this->StoredComments;
	}
	/**
	 * @return void
	 * @param FeedbackCommentArrayType $value 
	 */
	function setStoredComments($value)
	{
		$this->StoredComments = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('SetSellingManagerFeedbackOptionsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		if (!isset(self::$_elements[join('', array_slice(explode('\\', __CLASS__), -1))]))
				self::$_elements[join('', array_slice(explode('\\', __CLASS__), -1))] = array_merge(self::$_elements[join('', array_slice(explode('\\', get_parent_class()), -1))],
				array(
					'AutomatedLeaveFeedbackEvent' =>
					array(
						'required' => false,
						'type' => 'AutomatedLeaveFeedbackEventCodeType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					),
					'StoredComments' =>
					array(
						'required' => false,
						'type' => 'FeedbackCommentArrayType',
						'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
						'array' => false,
						'cardinality' => '0..1'
					)
				));
	}
}
?>
